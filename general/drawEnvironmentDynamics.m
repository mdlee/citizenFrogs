function  drawEnvironmentDynamics(d, tau, pantone)
%DRAWENVIRONMENTDYNAMICS Draw inferences about the environment dynamics

fontSize = 18;
scaleW = 1*1/d.nStimuli;
scaleH = 5*1/d.nFrogs;
srtFrg = [1 6 5 2 3 4 7];

F = figure; clf; hold on;
setFigure(F, [0.2 0.2 0.6 0.35], '');

set(gca, ...
  'xlim'       , [1 d.nStimuli]                , ...
  'xtick'      , [1 d.nStimuli]            , ...
  'xticklabelrot', 0, ...
  'ylim'       , [1 d.nFrogs]                 , ...
  'ytick'      , 1:d.nFrogs             , ...
  'yticklabel' , d.frogs(srtFrg)                , ...
  'ydir'       , 'rev'                       , ...
  'xgrid'       , 'off'                       , ...
  'ygrid'       , 'off'                       , ...
  'box'        , 'off'                     , ...
  'color'       , 'none' , ...
  'tickdir'    , 'out'                     , ...
  'layer'      , 'top'                     , ...
  'ticklength' , [0.01 0]                  , ...
  'clipping'   , 'off'                      , ...
  'layer'      , 'top'                     , ...
  'fontsize'   , fontSize                  );
T = xlabel('Clip', 'fontsize', fontSize+2, 'vert', 'top');
moveAxis(gca, [1 1 1 0.8], [0 0.05 0 0]);
Raxes(gca, 0.05, 0.01);

for sIdx = 1:d.nStimuli
  for fIdx = 1:d.nFrogs
    width = scaleW*sqrt(tau(sIdx, srtFrg(fIdx)));
    height = scaleH*sqrt(tau(sIdx, srtFrg(fIdx)));
    rectangle('position', [sIdx-width/2 fIdx-height/2 width height], ...
      'curvature', [0 0], ...
      'facecolor', pantone.Custard, ...
      'edgecolor', pantone.Custard);

  end
end
for fIdx = 1:d.nFrogs
  for sIdx = 1:d.nStimuli
    if d.truth(srtFrg(fIdx), sIdx)==1
      width = scaleW*0.1;
      height = scaleH*0.3;
      rectangle('position', [sIdx-width/2 fIdx-height/2 width height], ...
        'curvature', [0 0], ...
        'facecolor', pantone.ClassicBlue, ...
        'edgecolor', pantone.ClassicBlue);
    end
  end
end