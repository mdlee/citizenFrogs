function  drawParametersHighThreshold(d, chains, alpha, beta, accuracy, pantone)
%DRAWPARAMETERSHIGHTHRESHOLD Draw the high threshold model parameters
%against accuracy

CI = [2.5 97.5];
        tickWidth = 0.2;
        fontSize = 16;

        F = figure; clf; hold on;
        setFigure(F, [0.2 0.2 0.6 0.5], '');

        subplot(121); hold on;
        set(gca, ...
          'xlim'       , [0 1]                , ...
          'xtick'      , 0:tickWidth:1            , ...
          'xticklabelrot', 0, ...
          'ylim'       , [0 1]                 , ...
          'ytick'      , 0:tickWidth:1             , ...
          'xgrid'       , 'off'                       , ...
          'ygrid'       , 'off'                       , ...
          'box'        , 'off'                     , ...
          'color'       , 'none' , ...
          'tickdir'    , 'out'                     , ...
          'layer'      , 'top'                     , ...
          'ticklength' , [0.02 0]                  , ...
          'layer'      , 'top'                     , ...
          'fontsize'   , fontSize                  );
        moveAxis(gca, [1 1 1 1], [0 0.02 0 0]);
        axis equal; axis square;

        ylabel('Accuracy', 'fontsize', fontSize+2);
        xlabel('Detection Probability', 'fontsize', fontSize+2);
        Raxes(gca, 0.01, 0.01);

        for i = 1:d.nPeople
          bounds = prctile(chains.(sprintf('alpha_%d', i)), CI);
          plot(bounds, [accuracy(i) accuracy(i)],  '-', ...
            'color', pantone.GlacierGray);
        end
        for i = 1:d.nPeople
          plot(alpha(i), accuracy(i), 'o', ...
            'markersize', 6, ...
            'markerfacecolor', pantone.ClassicBlue, ...
            'markeredgecolor', 'w');
        end

        subplot(122); hold on;
        set(gca, ...
          'xlim'       , [0 1]                , ...
          'xtick'      , 0:tickWidth:1            , ...
          'xticklabelrot', 0, ...
          'ylim'       , [0 1]                 , ...
          'ytick'      , 0:tickWidth:1             , ...
          'xgrid'       , 'off'                       , ...
          'ygrid'       , 'off'                       , ...
          'box'        , 'off'                     , ...
          'color'       , 'none' , ...
          'tickdir'    , 'out'                     , ...
          'layer'      , 'top'                     , ...
          'ticklength' , [0.02 0]                  , ...
          'layer'      , 'top'                     , ...
          'fontsize'   , fontSize                  );
        moveAxis(gca, [1 1 1 1], [0 0.02 0 0]);
        axis equal; axis square;

        xlabel('Guessing Probability', 'fontsize', fontSize+2);
        Raxes(gca, 0.01, 0.01);

        for i = 1:d.nPeople
          bounds = prctile(chains.(sprintf('beta_%d', i)), CI);
          plot(bounds, [accuracy(i) accuracy(i)],  '-', ...
            'color', pantone.GlacierGray);
        end
        for i = 1:d.nPeople
          plot(beta(i), accuracy(i), 'o', ...
            'markersize', 6, ...
            'markerfacecolor', pantone.ClassicBlue, ...
            'markeredgecolor', 'w');
        end